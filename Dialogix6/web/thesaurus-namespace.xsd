<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright (c) 1997 - 2007 Apelon, Inc. All rights reserved. -->

<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">
	<xs:annotation>
		<xs:documentation> Describes a 'namespace' data format suitable for import into a Thesaurus Namespace by the DTS Import Wizard plug-in. 
			Defines all Attribute Types, Terms and Concepts.  Author: jbowie, Apelon, Inc. 
		</xs:documentation>
	</xs:annotation>
	
	<!--===============================================================================-->
	<!-- basic information for a DTS Object                          -->
	<!--===============================================================================-->
	<xs:group name="FullIdentifiers">
		<xs:sequence>
			<xs:element name="namespace" type="xs:token"/>
			<xs:group ref="BasicIdentifiers"/>
		</xs:sequence>
	</xs:group>

	<xs:annotation>
		<xs:documentation> Top level DTS Objects (Attribute Types, Terms and Concepts) are defined by the BasicIdentifiers (Name, Code, and Id). 
			The value of each of these elements (if specified) must be unique in the Namespace. 
			If an element is not provided (Code and ID) a generator will create a unique value upon loading.
		</xs:documentation>
	</xs:annotation>
	<xs:group name="BasicIdentifiers">
		<xs:sequence>
			<xs:element name="name" type="xs:token"/>
			<xs:element minOccurs="0" name="code" type="xs:token"/>
			<xs:element minOccurs="0" name="id" type="xs:positiveInteger"/>
		</xs:sequence>
	</xs:group>
	
	
	<!--===============================================================================-->
	<!-- terminology - a definition or update of a terminology                         -->
	<!--===============================================================================-->
	<xs:element name="terminology">
		<xs:annotation>
			<xs:documentation> A terminology is a collection of TypeDefs, TermDefs, ConceptDefs, PropertyDefs, and AssociationDefs </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="namespace" type="NamespaceDef" />
				<xs:choice minOccurs="0" maxOccurs="unbounded">
					<xs:element  name="proptype" type="PropertyTypeDef"/>
					<xs:element  name="assntype" type="AssociationTypeDef"/>
					<xs:element  name="qualtype" type="QualifierTypeDef"/>
				</xs:choice>
				<xs:element minOccurs="0" maxOccurs="unbounded" name="term" type="TermDef"/>
				<xs:element minOccurs="0" maxOccurs="unbounded" name="concept" type="ConceptDef"/>
				<xs:choice minOccurs="0" maxOccurs="unbounded">
					<xs:element  name="property" type="PropertyDef"/>
					<xs:element  name="synonym" type="SynonymDef"/>
					<xs:element name="association" type="AssociationDef"/>
				</xs:choice>
			</xs:sequence>
			<xs:attribute name="type" type="xs:token" fixed="namespace" />
		</xs:complexType>
	</xs:element>

	<!--===============================================================================-->
	<!-- NamespaceDef - definition of originating namespace                           -->
	<!--===============================================================================-->
	<xs:complexType name="NamespaceDef">
		<xs:group ref="BasicIdentifiers"/>
		<xs:attribute name="type" type="xs:token" use="required" fixed="Thesaurus"/>
	</xs:complexType>
	
	<!--===============================================================================-->
	<!-- PropertyTypeDef - definition of Property Type                           -->
	<!--===============================================================================-->
	<xs:complexType name="PropertyTypeDef">
		<xs:group ref="FullIdentifiers"/>
		<xs:attribute name="type" use="required" >
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="C"/> <!-- Concept Property -->
					<xs:enumeration value="T"/> <!-- Term Property -->
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="size" use="optional" default="I">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="B"/> <!-- Big Property -->
					<xs:enumeration value="S"/> <!-- Searchable Property -->
					<xs:enumeration value="I"/> <!-- Indexable Property -->
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="word" type ="xs:boolean" use="optional" default="false"/>
	</xs:complexType>
	
	<!--===============================================================================-->
	<!-- AssociationTypeDef - definition of Association Type                           -->
	<!--===============================================================================-->
	<xs:complexType name="AssociationTypeDef">
		<xs:sequence>
			<xs:group ref="FullIdentifiers"/>
			<xs:element minOccurs="0" name="inverse_name" type="xs:token"/>
		</xs:sequence>
		<xs:attribute name="type" use="required" >
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="C"/> <!-- Concept Association -->
					<xs:enumeration value="T"/> <!-- Term Association -->
					<xs:enumeration value="S"/> <!-- Synonym Association -->
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="purpose" use="optional" default="A">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="A"/> <!-- Arbitrary -->
					<xs:enumeration value="H"/> <!-- History -->
					<xs:enumeration value="M"/> <!-- Mapping -->
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
	
	<!--===============================================================================-->
	<!-- QualifierTypeDef - definition of Qualifier Type                           -->
	<!--===============================================================================-->
	<xs:complexType name="QualifierTypeDef">
		<xs:group ref="FullIdentifiers"/>
		<xs:attribute name="type" use="required" >
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="CP"/> <!-- Concept Property Qualifier -->
					<xs:enumeration value="CA"/> <!-- Concept Association Qualifier-->
					<xs:enumeration value="TP"/> <!-- Term Property Qualifier -->
					<xs:enumeration value="TA"/> <!-- Term Association Qualifier-->
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
	
	<!--===============================================================================-->
	<!-- TermDef - definition of a term                           -->
	<!--===============================================================================-->
	<xs:complexType name="TermDef">
		<xs:group ref="FullIdentifiers"/>
	</xs:complexType>

	<!--===============================================================================-->
	<!-- ConceptDef - definition of a Concept                           -->
	<!--===============================================================================-->
	<xs:complexType name="ConceptDef">
		<xs:group ref="FullIdentifiers"/>
		<xs:attribute name="root" type="xs:boolean" use="optional"/>
	</xs:complexType>
	
	<!--===============================================================================-->
	<!-- SynonymDef - definition of Synonym                           -->
	<!--===============================================================================-->
	<xs:complexType name="SynonymDef">
		<xs:sequence>
			<xs:element name="namespace" type="xs:token"/>
			<xs:element name="name" type="xs:token"/>		<!-- name of SynonymType -->
			<xs:group ref="FromElement"/>				<!-- from Concept -->
			<xs:group ref="ToElement"/>				<!-- To Term -->
			<xs:element name="preferred" minOccurs="0" type="xs:boolean"/>	<!-- true if a preferred synonym -->
		</xs:sequence>
	</xs:complexType>
	
	<!--===============================================================================-->
	<!-- PropertyDef - definition of Property                           -->
	<!--===============================================================================-->
	<xs:complexType name="PropertyDef">
		<xs:sequence>
			<xs:element name="namespace" type="xs:token"/>
			<xs:element name="name" type="xs:token"/>		<!-- name of PropertyType -->
			<xs:element name="value" type="xs:token"/>		<!-- Property value -->
			<xs:group ref ="FromElement"/>				<!-- Property's Concept/Term -->
			<xs:element minOccurs="0" maxOccurs="unbounded" name="qualifier" type="QualifierDef"/>
		</xs:sequence>
	</xs:complexType>
	
	<!--===============================================================================-->
	<!-- AssociationDef - definition of Association                           -->
	<!--===============================================================================-->
	<xs:complexType name="AssociationDef">
		<xs:annotation>
			<xs:documentation> This element includes all types of Associations: Synonyms, Term Associations and Concept Associations.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="namespace" type="xs:token"/>
			<xs:element name="name" type="xs:token"/>		<!-- name of AssociationType -->
			<xs:group ref="FromElement"/>
			<xs:group ref="ToElement"/>
			<xs:element minOccurs="0" maxOccurs="unbounded" name="qualifier" type="QualifierDef"/>
		</xs:sequence>
	</xs:complexType>
	
	<xs:group name="ToElement">
		<xs:annotation>
			<xs:documentation> An association from the local Concept/Term to another Concept/Term (in nany Namespace.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="to_namespace" type="xs:token"/>
			<xs:element name="to_name" type="xs:token"/>		<!-- name of target Concept/Term -->
		</xs:sequence>
	</xs:group>
	
	<xs:group name="FromElement">
		<xs:annotation>
			<xs:documentation> An association to the local Concept/Term from another Concept/Term (in a different Namespace).
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="from_namespace" type="xs:token"/>
			<xs:element name="from_name" type="xs:token"/>	<!-- name of source Concept/Term -->
		</xs:sequence>
	</xs:group>
	
	<!--===============================================================================-->
	<!-- QualifierDef - definition of Qualifier                           -->
	<!--===============================================================================-->
	<xs:complexType name="QualifierDef">
		<xs:sequence>
			<xs:element name="namespace" type="xs:token"/>
			<xs:element name="name" type="xs:token"/>		<!-- name of QualifierType -->
			<xs:element name="value" type="xs:token"/>		<!-- Qualifier value -->
		</xs:sequence>
	</xs:complexType>
	
	
</xs:schema>
